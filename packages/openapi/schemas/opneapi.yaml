openapi: 3.0.3
info:
  title: PIM (Product Information Management) API
  description: 商品情報管理システムのAPI定義
  version: 1.0.0
  contact:
    name: PIM System Team
    email: pim-support@example.com

servers:
  - url: https://api.pim.example.com/v1
    description: Production server
  - url: https://api-staging.pim.example.com/v1
    description: Staging server

paths:
  # 商品管理
  /products:
    get:
      summary: 商品一覧取得
      tags: [Products]
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
            maximum: 100
        - name: category_id
          in: query
          schema:
            type: string
        - name: brand_id
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/ProductStatus'
        - name: search
          in: query
          schema:
            type: string
          description: 商品名・説明での検索
      responses:
        '200':
          description: 商品一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
    post:
      summary: 商品作成
      tags: [Products]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
      responses:
        '201':
          description: 作成された商品
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /products/{product_id}:
    get:
      summary: 商品詳細取得
      tags: [Products]
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 商品詳細
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    put:
      summary: 商品更新
      tags: [Products]
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdateRequest'
      responses:
        '200':
          description: 更新された商品
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    delete:
      summary: 商品削除
      tags: [Products]
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 削除完了

  # 商品画像管理
  /products/{product_id}/images:
    get:
      summary: 商品画像一覧取得
      tags: [Product Images]
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 商品画像一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductImage'
    post:
      summary: 商品画像追加
      tags: [Product Images]
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                image_type:
                  $ref: '#/components/schemas/ImageType'
                alt_text:
                  type: string
                display_order:
                  type: integer
      responses:
        '201':
          description: 追加された商品画像
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'

  /products/{product_id}/images/{image_id}:
    put:
      summary: 商品画像更新
      tags: [Product Images]
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
        - name: image_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImageUpdateRequest'
      responses:
        '200':
          description: 更新された商品画像
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
    delete:
      summary: 商品画像削除
      tags: [Product Images]
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
        - name: image_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 削除完了

  # カテゴリマスタ
  /masters/categories:
    get:
      summary: カテゴリ一覧取得
      tags: [Masters - Categories]
      responses:
        '200':
          description: カテゴリ一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      summary: カテゴリ作成
      tags: [Masters - Categories]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryCreateRequest'
      responses:
        '201':
          description: 作成されたカテゴリ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'

  /masters/categories/{category_id}:
    get:
      summary: カテゴリ詳細取得
      tags: [Masters - Categories]
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: カテゴリ詳細
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    put:
      summary: カテゴリ更新
      tags: [Masters - Categories]
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryUpdateRequest'
      responses:
        '200':
          description: 更新されたカテゴリ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    delete:
      summary: カテゴリ削除
      tags: [Masters - Categories]
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 削除完了

  # ブランドマスタ
  /masters/brands:
    get:
      summary: ブランド一覧取得
      tags: [Masters - Brands]
      responses:
        '200':
          description: ブランド一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
    post:
      summary: ブランド作成
      tags: [Masters - Brands]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandCreateRequest'
      responses:
        '201':
          description: 作成されたブランド
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'

  /masters/brands/{brand_id}:
    get:
      summary: ブランド詳細取得
      tags: [Masters - Brands]
      parameters:
        - name: brand_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ブランド詳細
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
    put:
      summary: ブランド更新
      tags: [Masters - Brands]
      parameters:
        - name: brand_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandUpdateRequest'
      responses:
        '200':
          description: 更新されたブランド
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
    delete:
      summary: ブランド削除
      tags: [Masters - Brands]
      parameters:
        - name: brand_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 削除完了

  # 単位マスタ
  /masters/units:
    get:
      summary: 単位一覧取得
      tags: [Masters - Units]
      responses:
        '200':
          description: 単位一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Unit'
    post:
      summary: 単位作成
      tags: [Masters - Units]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitCreateRequest'
      responses:
        '201':
          description: 作成された単位
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'

components:
  schemas:
    # 商品関連スキーマ
    Product:
      type: object
      properties:
        product_id:
          type: string
          description: 商品ID
        product_code:
          type: string
          description: 商品コード
        jan_code:
          type: string
          description: JANコード
        basic_info:
          $ref: '#/components/schemas/ProductBasicInfo'
        physical_properties:
          $ref: '#/components/schemas/ProductPhysicalProperties'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
        status:
          $ref: '#/components/schemas/ProductStatus'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        created_by:
          type: string
        updated_by:
          type: string

    ProductBasicInfo:
      type: object
      properties:
        name:
          type: string
          description: 商品名
        name_kana:
          type: string
          description: 商品名カナ
        description:
          type: string
          description: 商品説明
        short_description:
          type: string
          description: 短い説明
        category_id:
          type: string
          description: カテゴリID
        brand_id:
          type: string
          description: ブランドID
        manufacturer:
          type: string
          description: メーカー名
        model_number:
          type: string
          description: 型番
        price:
          type: number
          format: double
          description: 価格
        currency:
          type: string
          default: "JPY"
          description: 通貨コード
        tax_rate:
          type: number
          format: double
          description: 税率
        keywords:
          type: array
          items:
            type: string
          description: 検索キーワード

    ProductPhysicalProperties:
      type: object
      properties:
        dimensions:
          $ref: '#/components/schemas/Dimensions'
        weight:
          type: object
          properties:
            value:
              type: number
              format: double
            unit_id:
              type: string
        volume:
          type: object
          properties:
            value:
              type: number
              format: double
            unit_id:
              type: string
        color:
          type: string
          description: 色
        material:
          type: string
          description: 素材
        origin_country:
          type: string
          description: 原産国
        shelf_life:
          type: integer
          description: 賞味期限（日数）
        storage_conditions:
          type: string
          description: 保存条件
        handling_precautions:
          type: string
          description: 取り扱い注意事項
        custom_properties:
          type: object
          additionalProperties: true
          description: カスタムプロパティ

    Dimensions:
      type: object
      properties:
        length:
          type: object
          properties:
            value:
              type: number
              format: double
            unit_id:
              type: string
        width:
          type: object
          properties:
            value:
              type: number
              format: double
            unit_id:
              type: string
        height:
          type: object
          properties:
            value:
              type: number
              format: double
            unit_id:
              type: string

    ProductImage:
      type: object
      properties:
        image_id:
          type: string
          description: 画像ID
        product_id:
          type: string
          description: 商品ID
        image_type:
          $ref: '#/components/schemas/ImageType'
        file_name:
          type: string
          description: ファイル名
        file_size:
          type: integer
          description: ファイルサイズ（bytes）
        mime_type:
          type: string
          description: MIMEタイプ
        url:
          type: string
          description: 画像URL
        alt_text:
          type: string
          description: 代替テキスト
        display_order:
          type: integer
          description: 表示順序
        is_primary:
          type: boolean
          description: メイン画像フラグ
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ProductStatus:
      type: string
      enum:
        - draft
        - active
        - inactive
        - discontinued
      description: 商品ステータス

    ImageType:
      type: string
      enum:
        - main
        - sub
        - detail
        - package
        - manual
      description: 画像タイプ

    # マスタ関連スキーマ
    Category:
      type: object
      properties:
        category_id:
          type: string
          description: カテゴリID
        name:
          type: string
          description: カテゴリ名
        name_en:
          type: string
          description: カテゴリ名（英語）
        description:
          type: string
          description: 説明
        parent_category_id:
          type: string
          description: 親カテゴリID
        level:
          type: integer
          description: 階層レベル
        sort_order:
          type: integer
          description: ソート順
        is_active:
          type: boolean
          description: 有効フラグ
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Brand:
      type: object
      properties:
        brand_id:
          type: string
          description: ブランドID
        name:
          type: string
          description: ブランド名
        name_en:
          type: string
          description: ブランド名（英語）
        description:
          type: string
          description: 説明
        logo_url:
          type: string
          description: ロゴURL
        website_url:
          type: string
          description: ウェブサイトURL
        is_active:
          type: boolean
          description: 有効フラグ
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Unit:
      type: object
      properties:
        unit_id:
          type: string
          description: 単位ID
        name:
          type: string
          description: 単位名
        symbol:
          type: string
          description: 単位記号
        unit_type:
          $ref: '#/components/schemas/UnitType'
        conversion_factor:
          type: number
          format: double
          description: 基準単位への変換係数
        base_unit_id:
          type: string
          description: 基準単位ID
        is_active:
          type: boolean
          description: 有効フラグ
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    UnitType:
      type: string
      enum:
        - length
        - weight
        - volume
        - area
        - temperature
        - time
      description: 単位タイプ

    # リクエストスキーマ
    ProductCreateRequest:
      type: object
      required:
        - product_code
        - basic_info
      properties:
        product_code:
          type: string
        jan_code:
          type: string
        basic_info:
          $ref: '#/components/schemas/ProductBasicInfo'
        physical_properties:
          $ref: '#/components/schemas/ProductPhysicalProperties'
        status:
          $ref: '#/components/schemas/ProductStatus'

    ProductUpdateRequest:
      type: object
      properties:
        product_code:
          type: string
        jan_code:
          type: string
        basic_info:
          $ref: '#/components/schemas/ProductBasicInfo'
        physical_properties:
          $ref: '#/components/schemas/ProductPhysicalProperties'
        status:
          $ref: '#/components/schemas/ProductStatus'

    ProductImageUpdateRequest:
      type: object
      properties:
        image_type:
          $ref: '#/components/schemas/ImageType'
        alt_text:
          type: string
        display_order:
          type: integer
        is_primary:
          type: boolean

    CategoryCreateRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        name_en:
          type: string
        description:
          type: string
        parent_category_id:
          type: string
        sort_order:
          type: integer
        is_active:
          type: boolean
          default: true

    CategoryUpdateRequest:
      type: object
      properties:
        name:
          type: string
        name_en:
          type: string
        description:
          type: string
        parent_category_id:
          type: string
        sort_order:
          type: integer
        is_active:
          type: boolean

    BrandCreateRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        name_en:
          type: string
        description:
          type: string
        logo_url:
          type: string
        website_url:
          type: string
        is_active:
          type: boolean
          default: true

    BrandUpdateRequest:
      type: object
      properties:
        name:
          type: string
        name_en:
          type: string
        description:
          type: string
        logo_url:
          type: string
        website_url:
          type: string
        is_active:
          type: boolean

    UnitCreateRequest:
      type: object
      required:
        - name
        - symbol
        - unit_type
      properties:
        name:
          type: string
        symbol:
          type: string
        unit_type:
          $ref: '#/components/schemas/UnitType'
        conversion_factor:
          type: number
          format: double
        base_unit_id:
          type: string
        is_active:
          type: boolean
          default: true

    # 共通スキーマ
    Pagination:
      type: object
      properties:
        current_page:
          type: integer
        per_page:
          type: integer
        total_pages:
          type: integer
        total_count:
          type: integer
        has_next:
          type: boolean
        has_prev:
          type: boolean

    Error:
      type: object
      properties:
        error_code:
          type: string
        message:
          type: string
        details:
          type: object
          additionalProperties: true

  responses:
    BadRequest:
      description: リクエストが不正です
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    NotFound:
      description: リソースが見つかりません
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    InternalServerError:
      description: サーバー内部エラー
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []